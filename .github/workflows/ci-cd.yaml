name: CI/CD Pipeline

on:
  push:
    branches:
      - main
    tags:
      - "v*"

env:
  IMAGE_NAME: rabhi03/assignment-java

jobs:
  build-and-push:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Log in to Docker Hub
        run: echo "${{ secrets.DOCKER_PASSWORD }}" | docker login -u "${{ secrets.DOCKER_USERNAME }}" --password-stdin

      - name: set docker image version
        id: get_version
        run:  |
          if [[ "${GITHUB_REF}" == refs/tags/* ]]; then
            VERSION="${GITHUB_REF#refs/tags/}"
          else
            VERSION="${GITHUB_REF#refs/heads/}"
          fi
          echo "VERSION=$VERSION"
          echo "VERSION=$VERSION" >> $GITHUB_ENV
    
      - name: Build Docker image
        run: docker build -t $IMAGE_NAME:$VERSION .

      - name: Push image to Docker Hub
        run: docker push $IMAGE_NAME:$VERSION

  deploy-to-k8s:
    needs: build-and-push
    runs-on: ubuntu-latest
    steps:
      - name: checkout repo
        uses: actions/checkout@v3

      - name: Show Git ref
        run: |
          echo "GITHUB_REF: $GITHUB_REF"
          git log -1 --oneline
        
      - name: Set up kubeconfig
        run: |
          mkdir -p $HOME/.kube
          echo "${{ secrets.KUBECONFIG_DATA }}" | base64 -d > $HOME/.kube/config
          
      - name: List Repo contents
        run: ls -R

      - name: Deploy to Kubernetes
        run: |
          echo "Printing directory tree:"
          ls -la
          echo "Checking contents of k8s directory:"
          ls -la k8s || echo "⚠️ k8s directory not found"
          # REMOVE or move the following line if k8s directory should exist from repo:
          # mkdir -p k8s
          sed "s|IMAGE_TAG|${{ env.VERSION }}|g" k8s/deployment-template.yaml > k8s/deployment.yaml
          
      - name: Show generated deployment.yaml
        run: |
          echo "🧾 Contents of rendered deployment.yaml:"
          cat k8s/deployment.yaml
          kubectl apply -f k8s/deployment.yaml
          kubectl apply -f k8s/service.yaml
          kubectl apply -f k8s/ingress.yaml  

  integration-tests:
    needs: deploy-to-k8s
    runs-on: ubuntu-latest
    steps:
      - name: Wait for app to be ready
        run: sleep 20

      - name: Run /health check
        run: |
          curl --fail http://localhost:8080/v1/health || exit 1

